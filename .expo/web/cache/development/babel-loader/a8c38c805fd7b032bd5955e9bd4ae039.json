{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Layout, TopNav, useTheme, themeColor } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { RenderFunc } from \"../../components/RenderFunc\";\nimport { pintores } from \"../../data/funcList\";\nimport { SeparatorItem } from \"../../components/SeparatorItem/SeparatorItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    isDarkmode = _useTheme.isDarkmode,\n    setTheme = _useTheme.setTheme;\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(RenderFunc, _objectSpread({}, item));\n  }\n  return _jsxs(Layout, {\n    children: [_jsx(TopNav, {\n      middleContent: \"Pintores\",\n      rightContent: _jsx(Ionicons, {\n        name: isDarkmode ? \"sunny\" : \"moon\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      rightAction: function rightAction() {\n        if (isDarkmode) {\n          setTheme(\"light\");\n        } else {\n          setTheme(\"dark\");\n        }\n      }\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(FlatList, {\n        ItemSeparatorComponent: SeparatorItem,\n        data: pintores,\n        keyExtractor: function keyExtractor(item) {\n          return item.name;\n        },\n        renderItem: renderItem\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Layout","TopNav","useTheme","themeColor","Ionicons","RenderFunc","pintores","SeparatorItem","navigation","isDarkmode","setTheme","renderItem","item","white100","dark","flex","alignItems","justifyContent","name"],"sources":["C:/Users/Usuario/OneDrive/Área de Trabalho/SOS-LAR/src/screens/Services/Pintores.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { FlatList, ListRenderItemInfo, View } from \"react-native\";\r\nimport { ServicesPagesParamList } from \"../../types/navigation\";\r\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\r\nimport {\r\n  Layout,\r\n  Button,\r\n  Text,\r\n  TopNav,\r\n  Section,\r\n  SectionContent,\r\n  useTheme,\r\n  themeColor,\r\n} from \"react-native-rapi-ui\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { RenderFunc } from \"../../components/RenderFunc\";\r\nimport { Funcionario, pintores } from \"../../data/funcList\";\r\nimport { SeparatorItem } from \"../../components/SeparatorItem/SeparatorItem\";\r\n\r\nexport default function ({\r\n  navigation,\r\n}: NativeStackScreenProps<ServicesPagesParamList, \"Pintores\">) {\r\n\r\n  const { isDarkmode, setTheme } = useTheme();\r\n  \r\n  function renderItem({ item }: ListRenderItemInfo<Funcionario>) {\r\n    return <RenderFunc {...item} />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <TopNav\r\n        middleContent=\"Pintores\"\r\n        rightContent={\r\n          <Ionicons\r\n            name={isDarkmode ? \"sunny\" : \"moon\"}\r\n            size={20}\r\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\r\n          />\r\n        }\r\n        rightAction={() => {\r\n          if (isDarkmode) {\r\n            setTheme(\"light\");\r\n          } else {\r\n            setTheme(\"dark\");\r\n          }\r\n        }}\r\n      />\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <FlatList\r\n          ItemSeparatorComponent={SeparatorItem}\r\n          data={pintores}\r\n          keyExtractor={(item) => item.name}\r\n          renderItem={renderItem}\r\n        />\r\n      </View>\r\n    </Layout>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAI1B,SACEC,MAAM,EAGNC,MAAM,EAGNC,QAAQ,EACRC,UAAU,QACL,sBAAsB;AAC7B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU;AACnB,SAAsBC,QAAQ;AAC9B,SAASC,aAAa;AAAuD;AAAA;AAE7E,eAAe,gBAEgD;EAAA,IAD7DC,UAAU,QAAVA,UAAU;EAGV,gBAAiCN,QAAQ,EAAE;IAAnCO,UAAU,aAAVA,UAAU;IAAEC,QAAQ,aAARA,QAAQ;EAE5B,SAASC,UAAU,QAA4C;IAAA,IAAzCC,IAAI,SAAJA,IAAI;IACxB,OAAO,KAAC,UAAU,oBAAKA,IAAI,EAAI;EACjC;EAEA,OACE,MAAC,MAAM;IAAA,WACL,KAAC,MAAM;MACL,aAAa,EAAC,UAAU;MACxB,YAAY,EACV,KAAC,QAAQ;QACP,IAAI,EAAEH,UAAU,GAAG,OAAO,GAAG,MAAO;QACpC,IAAI,EAAE,EAAG;QACT,KAAK,EAAEA,UAAU,GAAGN,UAAU,CAACU,QAAQ,GAAGV,UAAU,CAACW;MAAK,EAE7D;MACD,WAAW,EAAE,uBAAM;QACjB,IAAIL,UAAU,EAAE;UACdC,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,MAAM;UACLA,QAAQ,CAAC,MAAM,CAAC;QAClB;MACF;IAAE,EACF,EACF,KAAC,IAAI;MACH,KAAK,EAAE;QACLK,IAAI,EAAE,CAAC;QACPC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA,UAEF,KAAC,QAAQ;QACP,sBAAsB,EAAEV,aAAc;QACtC,IAAI,EAAED,QAAS;QACf,YAAY,EAAE,sBAACM,IAAI;UAAA,OAAKA,IAAI,CAACM,IAAI;QAAA,CAAC;QAClC,UAAU,EAAEP;MAAW;IACvB,EACG;EAAA,EACA;AAEb"},"metadata":{},"sourceType":"module"}