{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { component, themeColor } from \"../../constants/colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useTheme } from \"../../provider/ThemeProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Checkbox = function Checkbox(_ref) {\n  var _ref$value = _ref.value,\n    value = _ref$value === void 0 ? false : _ref$value,\n    onValueChange = _ref.onValueChange,\n    checkedColor = _ref.checkedColor,\n    uncheckedColor = _ref.uncheckedColor,\n    _ref$inverseColor = _ref.inverseColor,\n    inverseColor = _ref$inverseColor === void 0 ? themeColor.white : _ref$inverseColor,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    style = _ref.style;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var selectedCheckedColor = checkedColor ? checkedColor : component[theme].checkBox.checkedColor;\n  var selectedUncheckedColor = uncheckedColor ? uncheckedColor : component[theme].checkBox.uncheckedColor;\n  var handleChange = function handleChange() {\n    if (onValueChange) {\n      onValueChange(!value);\n    }\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: handleChange,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      width: size,\n      height: size,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: (style == null ? void 0 : style.borderRadius) || 4,\n      borderColor: value ? selectedCheckedColor : selectedUncheckedColor,\n      backgroundColor: disabled ? component[theme].checkBox.disabledColor : value ? selectedCheckedColor : \"transparent\",\n      borderWidth: 1\n    }),\n    disabled: disabled,\n    children: _jsx(Ionicons, {\n      name: \"md-checkmark\",\n      size: size - 2,\n      color: disabled ? inverseColor : value ? inverseColor : selectedUncheckedColor\n    })\n  });\n};\nexport default Checkbox;","map":{"version":3,"names":["React","component","themeColor","Ionicons","useTheme","Checkbox","value","onValueChange","checkedColor","uncheckedColor","inverseColor","white","disabled","size","style","theme","selectedCheckedColor","checkBox","selectedUncheckedColor","handleChange","width","height","alignItems","justifyContent","borderRadius","borderColor","backgroundColor","disabledColor","borderWidth"],"sources":["C:/Users/Usuario/OneDrive/Área de Trabalho/SOS-LAR/node_modules/react-native-rapi-ui/components/CheckBox/CheckBox.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  ColorValue,\r\n  TextInput,\r\n  TextInputProps,\r\n  TouchableOpacity,\r\n  View,\r\n  ViewStyle,\r\n} from \"react-native\";\r\nimport { component, themeColor } from \"../../constants/colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\n\r\ninterface Props {\r\n  value: boolean;\r\n  onValueChange?: (newValue: boolean) => void;\r\n  checkedColor?: ColorValue;\r\n  uncheckedColor?: ColorValue;\r\n  inverseColor?: ColorValue;\r\n  disabled?: boolean;\r\n  style?: ViewStyle;\r\n  size?: number;\r\n}\r\n\r\nconst Checkbox: React.FC<Props> = ({\r\n  value = false,\r\n  onValueChange,\r\n  checkedColor,\r\n  uncheckedColor,\r\n  inverseColor = themeColor.white,\r\n  disabled = false,\r\n  size = 24,\r\n  style,\r\n}) => {\r\n  const { theme } = useTheme();\r\n  const selectedCheckedColor = checkedColor\r\n    ? checkedColor\r\n    : component[theme].checkBox.checkedColor;\r\n  const selectedUncheckedColor = uncheckedColor\r\n    ? uncheckedColor\r\n    : component[theme].checkBox.uncheckedColor;\r\n\r\n  const handleChange = () => {\r\n    if (onValueChange) {\r\n      onValueChange(!value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={handleChange}\r\n      style={{\r\n        ...style,\r\n        width: size,\r\n        height: size,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: style?.borderRadius || 4,\r\n        borderColor: value ? selectedCheckedColor : selectedUncheckedColor,\r\n        backgroundColor: disabled\r\n          ? component[theme].checkBox.disabledColor\r\n          : value\r\n          ? selectedCheckedColor\r\n          : \"transparent\",\r\n        borderWidth: 1,\r\n      }}\r\n      disabled={disabled}\r\n    >\r\n      <Ionicons\r\n        name=\"md-checkmark\"\r\n        size={size - 2}\r\n        color={\r\n          disabled\r\n            ? inverseColor\r\n            : value\r\n            ? inverseColor\r\n            : selectedUncheckedColor\r\n        }\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAS1B,SAASC,SAAS,EAAEC,UAAU;AAC9B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,QAAQ;AAAuC;AAaxD,IAAMC,QAAyB,GAAG,SAA5BA,QAAyB,OASzB;EAAA,sBARJC,KAAK;IAALA,KAAK,2BAAG,KAAK;IACbC,aAAa,QAAbA,aAAa;IACbC,YAAY,QAAZA,YAAY;IACZC,cAAc,QAAdA,cAAc;IAAA,yBACdC,YAAY;IAAZA,YAAY,kCAAGR,UAAU,CAACS,KAAK;IAAA,qBAC/BC,QAAQ;IAARA,QAAQ,8BAAG,KAAK;IAAA,iBAChBC,IAAI;IAAJA,IAAI,0BAAG,EAAE;IACTC,KAAK,QAALA,KAAK;EAEL,gBAAkBV,QAAQ,EAAE;IAApBW,KAAK,aAALA,KAAK;EACb,IAAMC,oBAAoB,GAAGR,YAAY,GACrCA,YAAY,GACZP,SAAS,CAACc,KAAK,CAAC,CAACE,QAAQ,CAACT,YAAY;EAC1C,IAAMU,sBAAsB,GAAGT,cAAc,GACzCA,cAAc,GACdR,SAAS,CAACc,KAAK,CAAC,CAACE,QAAQ,CAACR,cAAc;EAE5C,IAAMU,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzB,IAAIZ,aAAa,EAAE;MACjBA,aAAa,CAAC,CAACD,KAAK,CAAC;IACvB;EACF,CAAC;EAED,OACE,KAAC,gBAAgB;IACf,OAAO,EAAEa,YAAa;IACtB,KAAK,kCACAL,KAAK;MACRM,KAAK,EAAEP,IAAI;MACXQ,MAAM,EAAER,IAAI;MACZS,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,YAAY,EAAE,CAAAV,KAAK,oBAALA,KAAK,CAAEU,YAAY,KAAI,CAAC;MACtCC,WAAW,EAAEnB,KAAK,GAAGU,oBAAoB,GAAGE,sBAAsB;MAClEQ,eAAe,EAAEd,QAAQ,GACrBX,SAAS,CAACc,KAAK,CAAC,CAACE,QAAQ,CAACU,aAAa,GACvCrB,KAAK,GACLU,oBAAoB,GACpB,aAAa;MACjBY,WAAW,EAAE;IAAC,EACd;IACF,QAAQ,EAAEhB,QAAS;IAAA,UAEnB,KAAC,QAAQ;MACP,IAAI,EAAC,cAAc;MACnB,IAAI,EAAEC,IAAI,GAAG,CAAE;MACf,KAAK,EACHD,QAAQ,GACJF,YAAY,GACZJ,KAAK,GACLI,YAAY,GACZQ;IACL;EACD,EACe;AAEvB,CAAC;AAED,eAAeb,QAAQ"},"metadata":{},"sourceType":"module"}