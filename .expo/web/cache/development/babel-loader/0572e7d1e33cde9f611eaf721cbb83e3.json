{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { themeColor, component } from \"../../constants/colors\";\nimport { fontSize, normal, italic } from \"../../constants/typography\";\nimport { useTheme } from \"../../provider/ThemeProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar StyledText = function StyledText(props) {\n  var _props$style3, _props$style4;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var font = function font() {\n    if (props.italic) {\n      if (props.fontWeight) {\n        return italic[props.fontWeight];\n      }\n      return italic.regular;\n    } else {\n      if (props.fontWeight) {\n        return normal[props.fontWeight];\n      }\n      return normal.regular;\n    }\n  };\n  var size = function size() {\n    var _props$style;\n    if ((_props$style = props.style) != null && _props$style.fontSize) {\n      var _props$style2;\n      return (_props$style2 = props.style) == null ? void 0 : _props$style2.fontSize;\n    } else {\n      return props.size ? fontSize[props.size] : fontSize.lg;\n    }\n  };\n  return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      fontFamily: font(),\n      fontSize: size(),\n      color: props.status ? themeColor[props.status] : (_props$style3 = props.style) != null && _props$style3.color ? (_props$style4 = props.style) == null ? void 0 : _props$style4.color : component[theme].text.color\n    })\n  }));\n};\nexport default StyledText;","map":{"version":3,"names":["React","themeColor","component","fontSize","normal","italic","useTheme","StyledText","props","theme","font","fontWeight","regular","size","style","lg","fontFamily","color","status","text"],"sources":["D:/Users/Usuario/Downloads/TCC-main/SOS-LAR/node_modules/react-native-rapi-ui/components/Text/Text.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Text, TextProps, TextStyle } from \"react-native\";\r\nimport { themeColor, component } from \"../../constants/colors\";\r\nimport { fontSize, normal, italic } from \"../../constants/typography\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\n\r\ninterface Props extends TextProps {\r\n  fontWeight?: keyof typeof normal;\r\n  italic?: boolean;\r\n  size?: keyof typeof fontSize;\r\n  style?: TextStyle;\r\n  status?: \"primary\" | \"success\" | \"warning\" | \"info\" | \"danger\";\r\n}\r\n\r\nconst StyledText: React.FC<Props> = (props: Props) => {\r\n  const { theme } = useTheme();\r\n  const font = () => {\r\n    if (props.italic) {\r\n      if (props.fontWeight) {\r\n        return italic[props.fontWeight];\r\n      }\r\n      return italic.regular;\r\n    } else {\r\n      if (props.fontWeight) {\r\n        return normal[props.fontWeight];\r\n      }\r\n      return normal.regular;\r\n    }\r\n  };\r\n\r\n  const size = () => {\r\n    if (props.style?.fontSize) {\r\n      return props.style?.fontSize;\r\n    } else {\r\n      return props.size ? fontSize[props.size] : fontSize.lg;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      style={{\r\n        ...props.style,\r\n        fontFamily: font(),\r\n        fontSize: size(),\r\n        color: props.status\r\n          ? themeColor[props.status]\r\n          : props.style?.color\r\n          ? props.style?.color\r\n          : component[theme].text.color,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StyledText;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,UAAU,EAAEC,SAAS;AAC9B,SAASC,QAAQ,EAAEC,MAAM,EAAEC,MAAM;AACjC,SAASC,QAAQ;AAAuC;AAUxD,IAAMC,UAA2B,GAAG,SAA9BA,UAA2B,CAAIC,KAAY,EAAK;EAAA;EACpD,gBAAkBF,QAAQ,EAAE;IAApBG,KAAK,aAALA,KAAK;EACb,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;IACjB,IAAIF,KAAK,CAACH,MAAM,EAAE;MAChB,IAAIG,KAAK,CAACG,UAAU,EAAE;QACpB,OAAON,MAAM,CAACG,KAAK,CAACG,UAAU,CAAC;MACjC;MACA,OAAON,MAAM,CAACO,OAAO;IACvB,CAAC,MAAM;MACL,IAAIJ,KAAK,CAACG,UAAU,EAAE;QACpB,OAAOP,MAAM,CAACI,KAAK,CAACG,UAAU,CAAC;MACjC;MACA,OAAOP,MAAM,CAACQ,OAAO;IACvB;EACF,CAAC;EAED,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;IAAA;IACjB,oBAAIL,KAAK,CAACM,KAAK,aAAX,aAAaX,QAAQ,EAAE;MAAA;MACzB,wBAAOK,KAAK,CAACM,KAAK,qBAAX,cAAaX,QAAQ;IAC9B,CAAC,MAAM;MACL,OAAOK,KAAK,CAACK,IAAI,GAAGV,QAAQ,CAACK,KAAK,CAACK,IAAI,CAAC,GAAGV,QAAQ,CAACY,EAAE;IACxD;EACF,CAAC;EAED,OACE,KAAC,IAAI,kCACCP,KAAK;IACT,KAAK,kCACAA,KAAK,CAACM,KAAK;MACdE,UAAU,EAAEN,IAAI,EAAE;MAClBP,QAAQ,EAAEU,IAAI,EAAE;MAChBI,KAAK,EAAET,KAAK,CAACU,MAAM,GACfjB,UAAU,CAACO,KAAK,CAACU,MAAM,CAAC,GACxB,iBAAAV,KAAK,CAACM,KAAK,aAAX,cAAaG,KAAK,oBAClBT,KAAK,CAACM,KAAK,qBAAX,cAAaG,KAAK,GAClBf,SAAS,CAACO,KAAK,CAAC,CAACU,IAAI,CAACF;IAAK;EAC/B,GACF;AAEN,CAAC;AAED,eAAeV,UAAU"},"metadata":{},"sourceType":"module"}