{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Layout, TopNav, themeColor, useTheme } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { func } from \"../data/funcionarios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    isDarkmode = _useTheme.isDarkmode,\n    setTheme = _useTheme.setTheme;\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(\"listaFunc\", _objectSpread({}, item));\n  }\n  return _jsxs(Layout, {\n    children: [_jsx(TopNav, {\n      middleContent: \"SoS Lar\",\n      leftContent: _jsx(Ionicons, {\n        name: \"chevron-back\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      leftAction: function leftAction() {\n        return navigation.goBack();\n      },\n      rightContent: _jsx(Ionicons, {\n        name: isDarkmode ? \"sunny\" : \"moon\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      rightAction: function rightAction() {\n        if (isDarkmode) {\n          setTheme(\"light\");\n        } else {\n          setTheme(\"dark\");\n        }\n      }\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: func.map(function (funcionarios) {\n        return _jsx(\"listaFunc\", _objectSpread({}, funcionarios));\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Layout","TopNav","themeColor","useTheme","Ionicons","func","navigation","isDarkmode","setTheme","renderItem","item","white100","dark","goBack","flex","map","funcionarios"],"sources":["C:/Users/Usuario/OneDrive/Área de Trabalho/SOS-LAR/src/screens/SecondScreen.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, FlatList, ListRenderItemInfo } from \"react-native\";\nimport { MainStackParamList } from \"../types/navigation\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport {\n  Layout,\n  TopNav,\n  Text,\n  themeColor,\n  useTheme,\n  Button,\n} from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { func, funcionarios } from \"../data/funcionarios\";\nimport  listaFunc  from \"../components/listaFunc\";\n\nexport default function ({\n  navigation,\n}: NativeStackScreenProps<MainStackParamList, \"SecondScreen\">) {\n  const { isDarkmode, setTheme } = useTheme();\n\n  function renderItem({ item }: ListRenderItemInfo<funcionarios>) {\n    return <listaFunc {...item} />;\n  }\n  return (\n    <Layout>\n      <TopNav\n        middleContent=\"SoS Lar\"\n        leftContent={\n          <Ionicons\n            name=\"chevron-back\"\n            size={20}\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\n          />\n        }\n        leftAction={() => navigation.goBack()}\n        rightContent={\n          <Ionicons\n            name={isDarkmode ? \"sunny\" : \"moon\"}\n            size={20}\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\n          />\n        }\n        rightAction={() => {\n          if (isDarkmode) {\n            setTheme(\"light\");\n          } else {\n            setTheme(\"dark\");\n          }\n        }}\n      />\n      <View\n        style={{\n          flex: 1,\n          \n        }}\n      >\n          {/* <FlatList\n            keyExtractor={(item) => item.name}\n            data={Func}\n            renderItem={}\n          /> */}\n\n          {func.map((funcionarios) => (\n            <listaFunc {...funcionarios} />\n          ))}\n      </View>\n    </Layout>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAI1B,SACEC,MAAM,EACNC,MAAM,EAENC,UAAU,EACVC,QAAQ,QAEH,sBAAsB;AAC7B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,IAAI;AAA6C;AAAA;AAG1D,eAAe,gBAEgD;EAAA,IAD7DC,UAAU,QAAVA,UAAU;EAEV,gBAAiCH,QAAQ,EAAE;IAAnCI,UAAU,aAAVA,UAAU;IAAEC,QAAQ,aAARA,QAAQ;EAE5B,SAASC,UAAU,QAA6C;IAAA,IAA1CC,IAAI,SAAJA,IAAI;IACxB,OAAO,oCAAeA,IAAI,EAAI;EAChC;EACA,OACE,MAAC,MAAM;IAAA,WACL,KAAC,MAAM;MACL,aAAa,EAAC,SAAS;MACvB,WAAW,EACT,KAAC,QAAQ;QACP,IAAI,EAAC,cAAc;QACnB,IAAI,EAAE,EAAG;QACT,KAAK,EAAEH,UAAU,GAAGL,UAAU,CAACS,QAAQ,GAAGT,UAAU,CAACU;MAAK,EAE7D;MACD,UAAU,EAAE;QAAA,OAAMN,UAAU,CAACO,MAAM,EAAE;MAAA,CAAC;MACtC,YAAY,EACV,KAAC,QAAQ;QACP,IAAI,EAAEN,UAAU,GAAG,OAAO,GAAG,MAAO;QACpC,IAAI,EAAE,EAAG;QACT,KAAK,EAAEA,UAAU,GAAGL,UAAU,CAACS,QAAQ,GAAGT,UAAU,CAACU;MAAK,EAE7D;MACD,WAAW,EAAE,uBAAM;QACjB,IAAIL,UAAU,EAAE;UACdC,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,MAAM;UACLA,QAAQ,CAAC,MAAM,CAAC;QAClB;MACF;IAAE,EACF,EACF,KAAC,IAAI;MACH,KAAK,EAAE;QACLM,IAAI,EAAE;MAER,CAAE;MAAA,UAQCT,IAAI,CAACU,GAAG,CAAC,UAACC,YAAY;QAAA,OACrB,oCAAeA,YAAY,EAAI;MAAA,CAChC;IAAC,EACC;EAAA,EACA;AAEb"},"metadata":{},"sourceType":"module"}