{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Layout, Button, Text, TopNav, Section, SectionContent, useTheme, themeColor } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    isDarkmode = _useTheme.isDarkmode,\n    setTheme = _useTheme.setTheme;\n  return _jsxs(Layout, {\n    children: [_jsx(TopNav, {\n      middleContent: \"Home\",\n      rightContent: _jsx(Ionicons, {\n        name: isDarkmode ? \"sunny\" : \"moon\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      rightAction: function rightAction() {\n        if (isDarkmode) {\n          setTheme(\"light\");\n        } else {\n          setTheme(\"dark\");\n        }\n      }\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Section, {\n        style: {\n          marginTop: 20\n        },\n        children: _jsxs(SectionContent, {\n          children: [_jsx(Text, {\n            fontWeight: \"bold\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Servi\\xE7os\"\n          }), _jsx(Button, {\n            text: \"Pedreiros\",\n            onPress: function onPress() {\n              navigation.navigate(\"SecondScreen\");\n            },\n            style: {\n              marginTop: 10\n            }\n          }), _jsx(Button, {\n            style: {\n              marginTop: 10\n            },\n            text: \"Rapi UI Documentation\",\n            status: \"info\",\n            onPress: function onPress() {\n              navigation.navigate(\"Eletricista\");\n            }\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Layout","Button","Text","TopNav","Section","SectionContent","useTheme","themeColor","Ionicons","navigation","isDarkmode","setTheme","white100","dark","flex","alignItems","justifyContent","marginTop","textAlign","navigate"],"sources":["C:/Users/Usuario/OneDrive/Área de Trabalho/SOS-LAR/src/screens/Home.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, Linking } from \"react-native\";\nimport { MainStackParamList } from \"../types/navigation\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { supabase } from \"../initSupabase\";\nimport {\n  Layout,\n  Button,\n  Text,\n  TopNav,\n  Section,\n  SectionContent,\n  useTheme,\n  themeColor,\n} from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Serv from \"../navigation/ServicesPages\";\n\nexport default function ({\n  navigation,\n}: NativeStackScreenProps<MainStackParamList, \"MainTabs\">) {\n  const { isDarkmode, setTheme } = useTheme();\n  return (\n    <Layout>\n      <TopNav\n        middleContent=\"Home\"\n        rightContent={\n          <Ionicons\n            name={isDarkmode ? \"sunny\" : \"moon\"}\n            size={20}\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\n          />\n        }\n        rightAction={() => {\n          if (isDarkmode) {\n            setTheme(\"light\");\n          } else {\n            setTheme(\"dark\");\n          }\n        }}\n      />\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Section style={{ marginTop: 20 }}>\n          <SectionContent>\n            <Text fontWeight=\"bold\" style={{ textAlign: \"center\" }}>\n              Serviços\n            </Text>\n            <Button\n              text=\"Pedreiros\"\n              onPress={() => {\n                navigation.navigate(\"SecondScreen\");\n              }}\n              style={{\n                marginTop: 10,\n              }}\n            />\n            <Button\n              style={{ marginTop: 10 }}\n              text=\"Rapi UI Documentation\"\n              status=\"info\"\n              onPress={() => {  \n                navigation.navigate(\"Eletricista\")\n              }}               \n            />\n          </SectionContent>\n        </Section>\n      </View>\n    </Layout>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAK1B,SACEC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,cAAc,EACdC,QAAQ,EACRC,UAAU,QACL,sBAAsB;AAC7B,SAASC,QAAQ,QAAQ,oBAAoB;AAAC;AAAA;AAG9C,eAAe,gBAE4C;EAAA,IADzDC,UAAU,QAAVA,UAAU;EAEV,gBAAiCH,QAAQ,EAAE;IAAnCI,UAAU,aAAVA,UAAU;IAAEC,QAAQ,aAARA,QAAQ;EAC5B,OACE,MAAC,MAAM;IAAA,WACL,KAAC,MAAM;MACL,aAAa,EAAC,MAAM;MACpB,YAAY,EACV,KAAC,QAAQ;QACP,IAAI,EAAED,UAAU,GAAG,OAAO,GAAG,MAAO;QACpC,IAAI,EAAE,EAAG;QACT,KAAK,EAAEA,UAAU,GAAGH,UAAU,CAACK,QAAQ,GAAGL,UAAU,CAACM;MAAK,EAE7D;MACD,WAAW,EAAE,uBAAM;QACjB,IAAIH,UAAU,EAAE;UACdC,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,MAAM;UACLA,QAAQ,CAAC,MAAM,CAAC;QAClB;MACF;IAAE,EACF,EACF,KAAC,IAAI;MACH,KAAK,EAAE;QACLG,IAAI,EAAE,CAAC;QACPC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA,UAEF,KAAC,OAAO;QAAC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAG,CAAE;QAAA,UAChC,MAAC,cAAc;UAAA,WACb,KAAC,IAAI;YAAC,UAAU,EAAC,MAAM;YAAC,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAS,CAAE;YAAA;UAAA,EAEhD,EACP,KAAC,MAAM;YACL,IAAI,EAAC,WAAW;YAChB,OAAO,EAAE,mBAAM;cACbT,UAAU,CAACU,QAAQ,CAAC,cAAc,CAAC;YACrC,CAAE;YACF,KAAK,EAAE;cACLF,SAAS,EAAE;YACb;UAAE,EACF,EACF,KAAC,MAAM;YACL,KAAK,EAAE;cAAEA,SAAS,EAAE;YAAG,CAAE;YACzB,IAAI,EAAC,uBAAuB;YAC5B,MAAM,EAAC,MAAM;YACb,OAAO,EAAE,mBAAM;cACbR,UAAU,CAACU,QAAQ,CAAC,aAAa,CAAC;YACpC;UAAE,EACF;QAAA;MACa;IACT,EACL;EAAA,EACA;AAEb"},"metadata":{},"sourceType":"module"}